{"ast":null,"code":"var _jsxFileName = \"/Users/eftelyasivridag/Desktop/Doctor-Patient-Portal/frontend/src/components/DoctorLogin.js\",\n  _s = $RefreshSig$();\nimport { GoogleOAuthProvider, GoogleLogin } from \"@react-oauth/google\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorLogin = () => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleGoogleSuccess = async response => {\n    const decoded = jwtDecode(response.credential);\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/auth/doctor/google-login\", {\n        token: response.credential\n      });\n      localStorage.setItem(\"token\", res.data.token);\n      navigate(\"/doctor-dashboard\");\n    } catch (error) {\n      console.error(\"Google authentication failed\");\n    }\n  };\n  const handleGoogleFailure = () => {\n    console.error(\"Google Sign-In Failed\");\n  };\n  const handleManualLogin = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/auth/doctor/login\", {\n        email,\n        password\n      });\n      localStorage.setItem(\"token\", res.data.token);\n      navigate(\"/doctor-dashboard\");\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Login failed:\", (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n    clientId: \"YOUR_GOOGLE_CLIENT_ID\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Doctor Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleManualLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        onSuccess: handleGoogleSuccess,\n        onError: handleGoogleFailure\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(DoctorLogin, \"H+iueE6ppXbrBS3eFHdSUQUe0Ps=\", false, function () {\n  return [useNavigate];\n});\n_c = DoctorLogin;\nexport default DoctorLogin;\nvar _c;\n$RefreshReg$(_c, \"DoctorLogin\");","map":{"version":3,"names":["GoogleOAuthProvider","GoogleLogin","jwtDecode","useState","useNavigate","axios","jsxDEV","_jsxDEV","DoctorLogin","_s","navigate","email","setEmail","password","setPassword","handleGoogleSuccess","response","decoded","credential","res","post","token","localStorage","setItem","data","error","console","handleGoogleFailure","handleManualLogin","e","preventDefault","_error$response","_error$response$data","message","clientId","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","onSuccess","onError","_c","$RefreshReg$"],"sources":["/Users/eftelyasivridag/Desktop/Doctor-Patient-Portal/frontend/src/components/DoctorLogin.js"],"sourcesContent":["import { GoogleOAuthProvider, GoogleLogin } from \"@react-oauth/google\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst DoctorLogin = () => {\n    const navigate = useNavigate();\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const handleGoogleSuccess = async (response) => {\n        const decoded = jwtDecode(response.credential);\n        try {\n            const res = await axios.post(\"http://localhost:5000/api/auth/doctor/google-login\", {\n                token: response.credential\n            });\n\n            localStorage.setItem(\"token\", res.data.token);\n            navigate(\"/doctor-dashboard\");\n        } catch (error) {\n            console.error(\"Google authentication failed\");\n        }\n    };\n\n    const handleGoogleFailure = () => {\n        console.error(\"Google Sign-In Failed\");\n    };\n\n    const handleManualLogin = async (e) => {\n        e.preventDefault();\n        try {\n            const res = await axios.post(\"http://localhost:5000/api/auth/doctor/login\", { email, password });\n            localStorage.setItem(\"token\", res.data.token);\n            navigate(\"/doctor-dashboard\");\n        } catch (error) {\n            console.error(\"Login failed:\", error.response?.data?.message);\n        }\n    };\n\n    return (\n        <GoogleOAuthProvider clientId=\"YOUR_GOOGLE_CLIENT_ID\">\n            <div>\n                <h2>Doctor Login</h2>\n                <form onSubmit={handleManualLogin}>\n                    <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n                    <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\n                    <button type=\"submit\">Login</button>\n                </form>\n                <GoogleLogin onSuccess={handleGoogleSuccess} onError={handleGoogleFailure} />\n            </div>\n        </GoogleOAuthProvider>\n    );\n};\n\nexport default DoctorLogin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}