{"ast":null,"code":"var _jsxFileName = \"/Users/eftelyasivridag/Desktop/Doctor-Patient-Portal/frontend/src/components/DoctorLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { GoogleOAuthProvider, GoogleLogin } from \"@react-oauth/google\";\nimport { useNavigate } from \"react-router-dom\"; // âœ… Use React Router for navigation\nimport axios from \"axios\"; // âœ… Import axios for API calls\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorLogin = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate(); // âœ… Use React Router's useNavigate\n\n  // âœ… Read environment variables\n  const clientId = \"624117525458-egh8rn7dn30tcdfennek3l9rkff5coln.apps.googleusercontent.com\" || \"\";\n  const backendURL = process.env.REACT_APP_BACKEND_URL || \"http://localhost:5008\";\n\n  // âœ… Handle Manual Login\n  const handleManualLogin = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.post(`${backendURL}/api/auth/doctor/login`, {\n        email,\n        password\n      });\n      localStorage.setItem(\"token\", res.data.token);\n      alert(\"Login successful!\");\n      navigate(\"/dashboard\"); // âœ… Use navigate instead of router.push\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || \"Login failed. Please try again.\");\n    }\n  };\n\n  // âœ… Handle Google Login Success\n  const handleGoogleSuccess = async response => {\n    try {\n      console.log(\"deneme\");\n      const {\n        credential\n      } = response;\n      const res = await axios.post(`${backendURL}/api/auth/google`, {\n        token: credential\n      });\n      localStorage.setItem(\"token\", res.data.token);\n      alert(\"Google login successful!\");\n      navigate(\"/dashboard\");\n    } catch (err) {\n      setError(\"Google login failed. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n    clientId: clientId,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Doctor Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleManualLogin,\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divider\",\n        children: \"OR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        onSuccess: handleGoogleSuccess,\n        onError: () => setError(\"Google Login Failed\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate(\"/doctor-register\"),\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(DoctorLogin, \"Ktx5ktSKAplPJrsY5gRTpmAHqe0=\", false, function () {\n  return [useNavigate];\n});\n_c = DoctorLogin;\nexport default DoctorLogin;\nvar _c;\n$RefreshReg$(_c, \"DoctorLogin\");","map":{"version":3,"names":["React","useState","GoogleOAuthProvider","GoogleLogin","useNavigate","axios","jsxDEV","_jsxDEV","DoctorLogin","_s","email","setEmail","password","setPassword","error","setError","navigate","clientId","backendURL","process","env","REACT_APP_BACKEND_URL","handleManualLogin","e","preventDefault","res","post","localStorage","setItem","data","token","alert","err","_err$response","_err$response$data","response","handleGoogleSuccess","console","log","credential","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","onSuccess","onError","onClick","_c","$RefreshReg$"],"sources":["/Users/eftelyasivridag/Desktop/Doctor-Patient-Portal/frontend/src/components/DoctorLogin.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { GoogleOAuthProvider, GoogleLogin } from \"@react-oauth/google\";\nimport { useNavigate } from \"react-router-dom\"; // âœ… Use React Router for navigation\nimport axios from \"axios\"; // âœ… Import axios for API calls\n\nconst DoctorLogin = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const navigate = useNavigate(); // âœ… Use React Router's useNavigate\n\n \n    // âœ… Read environment variables\n    const clientId = \"624117525458-egh8rn7dn30tcdfennek3l9rkff5coln.apps.googleusercontent.com\" || \"\";\n    const backendURL = process.env.REACT_APP_BACKEND_URL || \"http://localhost:5008\"; \n\n    \n    // âœ… Handle Manual Login\n    const handleManualLogin = async (e) => {\n        e.preventDefault();\n        try {\n            const res = await axios.post(`${backendURL}/api/auth/doctor/login`, { email, password });\n\n            localStorage.setItem(\"token\", res.data.token);\n            alert(\"Login successful!\");\n            navigate(\"/dashboard\"); // âœ… Use navigate instead of router.push\n        } catch (err) {\n            setError(err.response?.data?.error || \"Login failed. Please try again.\");\n        }\n    };\n\n    // âœ… Handle Google Login Success\n    const handleGoogleSuccess = async (response) => {\n        try {\n            console.log(\"deneme\");\n            const { credential } = response;\n            const res = await axios.post(`${backendURL}/api/auth/google`, { token: credential });\n\n            localStorage.setItem(\"token\", res.data.token);\n            alert(\"Google login successful!\");\n            navigate(\"/dashboard\");\n        } catch (err) {\n            setError(\"Google login failed. Please try again.\");\n        }\n    };\n\n    return (\n        <GoogleOAuthProvider clientId={clientId}>\n            <div className=\"login-container\">\n                <h2>Doctor Login</h2>\n\n                {error && <p className=\"error\">{error}</p>}\n\n                {/* ðŸ”¹ Manual Login Form */}\n                <form onSubmit={handleManualLogin} className=\"login-form\">\n                    <input \n                        type=\"email\" \n                        placeholder=\"Email\" \n                        value={email} \n                        onChange={(e) => setEmail(e.target.value)} \n                        required\n                    />\n                    <input \n                        type=\"password\" \n                        placeholder=\"Password\" \n                        value={password} \n                        onChange={(e) => setPassword(e.target.value)} \n                        required\n                    />\n                    <button type=\"submit\">Login</button>\n                </form>\n\n                <div className=\"divider\">OR</div>\n\n                {/* ðŸ”¹ Google Login Button */}\n                <GoogleLogin onSuccess={handleGoogleSuccess} onError={() => setError(\"Google Login Failed\")} />\n\n                {/* ðŸ”¹ Registration Navigation */}\n                <p>\n                    Don't have an account? <button onClick={() => navigate(\"/doctor-register\")}>Register</button>\n                </p>\n            </div>\n        </GoogleOAuthProvider>\n    );\n};\n\nexport default DoctorLogin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}